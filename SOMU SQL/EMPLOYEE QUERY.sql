  USE SOMU
CREATE TABLE EMPLOYEE(
id int,
name varchar(50),
age int,
designation varchar(40),
place varchar(30),
salary int)
insert into EMPLOYEE values
(1,'Alice Smith', 28,'Software Engineer','San Francisco',90000),
(2,'Bob Johnson', 34,' Project Manager','Chicago',110000),
(3,'Carol Williams', 42,' Senior Analyst','Boston',95000),
(4,'David Brown', 31,' Marketing Specialist','Los Angeles',85000),
(5,'Emily Davis', 29,' HR Coordinator','Seattle',75000),
(6,'Frank Lee', 38,' Financial Analyst','Houston',10000),
(7,'Grace Taylor',  45,' Operations Manager','Miami',120000),
(8,'Isabel Martinez', 33,' Product Designer','San Diego',95000),
(9,'Jack Nguyen', 36,' Sales Manager','Dallas',115000),
(10,'Kelly Patel', 30,' Operations Coordinator','Atlanta',80000),
(11,'Liam Murphy', 39,' Senior Developer','Denver',110000),
(12,'Mia Wilson', 26,' Marketing Coordinator','Portland',70000),
(13,'Nathan Adams', 32,' Business Analyst','Philadelphia',90000),
(14,'Olivia Garcia', 37,' IT Manager','Washington, D.C.',125000),
(15,'Kelly Patel', 30,' Operations Coordinator','Atlanta',80000)

SELECT * FROM EMPLOYEE
SELECT ID FROM EMPLOYEE
SELECT DISTINCT * FROM EMPLOYEE
SELECT * FROM EMPLOYEE WHERE ID=5
SELECT * FROM EMPLOYEE ORDER BY AGE ASC
SELECT * FROM EMPLOYEE ORDER BY SALARY DESC
SELECT * FROM EMPLOYEE ORDER BY NAME ASC
SELECT * FROM EMPLOYEE ORDER BY NAME DESC

--LOGICAL OPERATOR
SELECT * FROM EMPLOYEE WHERE NAME='Kelly Patel'  AND ID=10
SELECT * FROM EMPLOYEE WHERE NAME='Alice Smith' OR PLACE='Houston'
SELECT * FROM EMPLOYEE WHERE NOT NAME='Carol Williams'

--NULL VALUE
INSERT INTO EMPLOYEE(ID,NAME,AGE,PLACE) VALUES(16,'Liam Murphy',48,'Washington, D.C.')

--TOP 5 ROWS
SELECT TOP 5 * FROM EMPLOYEE 

--AGGREGATE FUNCTIONS
SELECT SUM(SALARY) FROM EMPLOYEE 
SELECT AVG(SALARY) FROM EMPLOYEE 
SELECT MIN(SALARY) FROM EMPLOYEE 
SELECT * FROM EMPLOYEE WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEE)
SELECT COUNT(ID) FROM EMPLOYEE 
 SELECT * FROM EMPLOYEE WHERE SALARY BETWEEN 50000 AND 100000
 SELECT * FROM EMPLOYEE WHERE SALARY IN (70000,90000,110000,125000)  

 --like and wildcards _,%
 SELECT * FROM EMPLOYEE WHERE NAME LIKE  'A%'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE  '%S'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE  '%R%'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE  '_S%'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE  '%_A'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE '[A-M]%'
 SELECT * FROM EMPLOYEE WHERE NAME LIKE '[^A-M]%'
 select * from employee where name like '[^djl]%'


 --ALIASES
 SELECT ID AS EMPID FROM EMPLOYEE

 --UPDATE
 UPDATE EMPLOYEE SET CITY='Houston' WHERE ID=5
 SELECT * FROM EMPLOYEE    
 DELETE FROM EMPLOYEE WHERE NAME='Liam Murphy'
 ALTER TABLE EMPLOYEE DROP COLUMN EMAIL

 --RENAME
 EXEC SP_RENAME 'EMPLOYEE1','EMPLOYEE'
 EXEC SP_RENAME 'EMPLOYEE.PLACE','CITY'

 --JOINS
 CREATE TABLE EMPLOYEE_1(
 ID INT,
 NAME VARCHAR(100),
 AGE INT,
 SALARY INT)
 INSERT INTO EMPLOYEE_1 VALUES('Bob Johnson',34,110000),('David Brown',31,85000),('Mia Wilson',26,70000),('TARA',47,24500),('LISA',29,65471),
 ('MONA',35,45120)
 SELECT * FROM EMPLOYEE
 SELECT * FROM EMPLOYEE_1
  SELECT EMPLOYEE.ID,EMPLOYEE.NAME,EMPLOYEE_1.AGE,EMPLOYEE_1.SALARY FROM EMPLOYEE FULL JOIN EMPLOYEE_1 ON EMPLOYEE.NAME=EMPLOYEE_1.NAME
  SELECT EMPLOYEE.ID,EMPLOYEE.NAME,EMPLOYEE_1.AGE,EMPLOYEE_1.SALARY FROM EMPLOYEE RIGHT JOIN EMPLOYEE_1 ON EMPLOYEE.NAME=EMPLOYEE_1.NAME
 SELECT EMPLOYEE.ID,EMPLOYEE.NAME,EMPLOYEE_1.AGE,EMPLOYEE_1.SALARY FROM EMPLOYEE LEFT JOIN EMPLOYEE_1 ON EMPLOYEE.NAME=EMPLOYEE_1.NAME
 SELECT EMPLOYEE.ID,EMPLOYEE.NAME,EMPLOYEE_1.AGE,EMPLOYEE_1.SALARY FROM EMPLOYEE INNER JOIN EMPLOYEE_1 ON EMPLOYEE.NAME=EMPLOYEE_1.NAME

 --UNION
 SELECT ID,NAME,CITY FROM EMPLOYEE
 UNION 
 SELECT ID, NAME, AGE FROM EMPLOYEE_1
 
 
 --GROUP BY



 SELECT * FROM EMPLOYEE
 SELECT * FROM EMPLOYEE WHERE ID=15

 SELECT COUNT(NAME),CITY FROM EMPLOYEE GROUP BY CITY HAVING COUNT(NAME)=2

 --SELECT INTO
 SELECT * INTO NEW_EMP_TABLE FROM EMPLOYEE  --CREATES A NEW TABLE WITH DATA
 SELECT * FROM NEW_EMP_TABLE
  TRUNCATE TABLE NEW_EMP_TABLE         --REMOVES ALL THE DATA
  INSERT INTO NEW_EMP_TABLE  SELECT * FROM    EMPLOYEE   
  
  SELECT *  INTO NEWTABLE FROM EMPLOYEE WHERE 2=8
  SELECT * FROM NEWTABLE

--CASE
SELECT *,
CASE 
WHEN SALARY>=100000 THEN 'HIGH SALARY'
WHEN SALARY<100000 THEN 'LOW SALARY'
END AS STATUS
FROM EMPLOYEE

--DROP QUERY
DROP TABLE NEWTABLE
SELECT * FROM NEW_EMP_TABLE
DELETE FROM NEW_EMP_TABLE 

---CONSTRAINTS
CREATE TABLE CONST1(
ID INT IDENTITY(1,1 ),
NAME VARCHAR(20) NOT NULL,
AGE INT CHECK (AGE>22),
PLACE VARCHAR(10) DEFAULT 'COIMBATORE',
MOBILE BIGINT UNIQUE,
ACCOUNT INT PRIMARY KEY)

SELECT * FROM CONST1
INSERT INTO CONST1(NAME,AGE,MOBILE,ACCOUNT) VALUES('IMAM',29,8795773021,6666)

CREATE TABLE CONST2(
ID INT,
NAME VARCHAR(10),
ACC_NO INT FOREIGN KEY REFERENCES CONST1(ACCOUNT) ,
SALARY INT)
 INSERT INTO CONST2 VALUES(2,'BALA',2222,25000)

   

